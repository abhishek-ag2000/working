# Generated by Django 2.0.6 on 2019-08-08 05:31

from django.db import migrations


class Migration(migrations.Migration):
    """
    Sub classing Migration for default data insertion
    We need to create an empty migration after initial migration to insert the initial data as
    python manage.py makemigrations --empty bracketline
    """

    def load_default_group_base_objects(apps, schema_editor):
        """
        This method will be called by migration to insert the data
        """
        group_base_model = apps.get_model("bracketline", "GroupBase")

        group_base_objects = [
            group_base_model(id=1, name='Primary', parent='Primary', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=2, name='Bank Accounts', parent='Current Assets', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=3, name='Bank OD A/c', parent='Loans (Liability)', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=4, name='Branch / Divisions', parent='Primary', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=5, name='Capital Account', parent='Primary', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=6, name='Cash-in-Hand', parent='Current Assets', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=7, name='Current Assets', parent='Primary', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=8, name='Current Liabilities', parent='Primary', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=9, name='Deposits (Asset)', parent='Current Assets', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=10, name='Direct Expenses', parent='Primary', is_revenue='Yes', affects_trading='Yes', is_debit='Yes'),
            group_base_model(id=11, name='Direct Incomes', parent='Primary', is_revenue='Yes', affects_trading='Yes', is_debit='No'),
            group_base_model(id=12, name='Duties & Taxes', parent='Current Liabilities', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=13, name='Fixed Assets', parent='Primary', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=14, name='Indirect Expenses', parent='Primary', is_revenue='Yes', affects_trading='No', is_debit='Yes'),
            group_base_model(id=15, name='Indirect Incomes', parent='Primary', is_revenue='Yes', affects_trading='No', is_debit='No'),
            group_base_model(id=16, name='Investments', parent='Primary', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=17, name='Loans & Advances (Asset)', parent='Current Assets', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=18, name='Loans (Liability)', parent='Primary', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=19, name='Misc. Expenses (ASSET)', parent='Primary', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=20, name='Provisions', parent='Current Liabilities', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=21, name='Purchase Accounts', parent='Primary', is_revenue='Yes', affects_trading='Yes', is_debit='Yes'),
            group_base_model(id=22, name='Reserves & Surplus', parent='Capital Account', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=23, name='Sales Accounts', parent='Primary', is_revenue='Yes', affects_trading='Yes', is_debit='No'),
            group_base_model(id=24, name='Secured Loans', parent='Loans (Liability)', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=25, name='Stock-in-Hand', parent='Current Assets', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=26, name='Sundry Creditors', parent='Current Liabilities', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=27, name='Sundry Debtors', parent='Current Assets', is_revenue='No', affects_trading='No', is_debit='Yes'),
            group_base_model(id=28, name='Suspense A/c', parent='Primary', is_revenue='No', affects_trading='No', is_debit='No'),
            group_base_model(id=29, name='Unsecured Loans', parent='Loans (Liability)', is_revenue='No', affects_trading='No', is_debit='No')
        ]

        group_base_model.objects.bulk_create(group_base_objects)

        # store_corporate = Store(id=0,name='Corporate',address='624 Broadway', city='San Diego',state='CA',email='corporate@coffeehouse.com')
        # store_corporate.save()

    def delete_default_group_base_objects(apps, schema_editor):
        """
        This method will be called by migration to roll back data insertion
        """
        group_base_model = apps.get_model("bracketline", "GroupBase")
        group_base_model.objects.all().delete()

    def load_default_country_objects(apps, schema_editor):
        """
        This method will be called by migration to insert the data
        """
        country_master_model = apps.get_model("bracketline", "CountryMaster")

        country_objects = [
            country_master_model(id=1, country_name='Afghanistan'),
            country_master_model(id=2, country_name='Australia'),
            country_master_model(id=3, country_name='Bangladesh'),
            country_master_model(id=4, country_name='Belgium'),
            country_master_model(id=5, country_name='Bhutan'),
            country_master_model(id=6, country_name='Burundi'),
            country_master_model(id=7, country_name='China'),
            country_master_model(id=8, country_name='Germany'),
            country_master_model(id=9, country_name='Ghana'),
            country_master_model(id=10, country_name='Guinea-Bissau'),
            country_master_model(id=11, country_name='Hong Kong'),
            country_master_model(id=12, country_name='India'),
            country_master_model(id=13, country_name='Indonesia'),
            country_master_model(id=14, country_name='Iran'),
            country_master_model(id=15, country_name='Iraq'),
            country_master_model(id=16, country_name='Japan'),
            country_master_model(id=17, country_name='Kuwait'),
            country_master_model(id=18, country_name='Malaysia'),
            country_master_model(id=19, country_name='Maldives'),
            country_master_model(id=20, country_name='Mauritius'),
            country_master_model(id=21, country_name='Mozambique'),
            country_master_model(id=22, country_name='Nepal'),
            country_master_model(id=23, country_name='Nigeria'),
            country_master_model(id=24, country_name='Pakistan'),
            country_master_model(id=25, country_name='Qatar'),
            country_master_model(id=26, country_name='Saudi Arabia'),
            country_master_model(id=27, country_name='Singapore'),
            country_master_model(id=28, country_name='South Africa'),
            country_master_model(id=29, country_name='South Korea'),
            country_master_model(id=30, country_name='Sri Lanka'),
            country_master_model(id=31, country_name='Switzerland'),
            country_master_model(id=32, country_name='Tanzania'),
            country_master_model(id=33, country_name='United Arab Emirates'),
            country_master_model(id=34, country_name='United Kingdom'),
            country_master_model(id=35, country_name='United States'),
            country_master_model(id=36, country_name='Venezuela'),
            country_master_model(id=37, country_name='Vietnam'),
        ]

        country_master_model.objects.bulk_create(country_objects)

    def delete_default_country_objects(apps, schema_editor):
        """
        This method will be called by migration to roll back data insertion
        """
        country_master_model = apps.get_model("bracketline", "CountryMaster")
        country_master_model.objects.all().delete()

    def load_default_state_objects(apps, schema_editor):
        """
        This method will be called by migration to insert the data
        """
        state_master_model = apps.get_model("bracketline", "StateMaster")

        state_objects = [
            state_master_model(id=1, state_name='Andaman & Nicobar Islands', state_code='35'),
            state_master_model(id=2, state_name='Andhra Pradesh', state_code='37'),
            state_master_model(id=3, state_name='Arunachal Pradesh', state_code='12'),
            state_master_model(id=4, state_name='Assam', state_code='18'),
            state_master_model(id=5, state_name='Bihar', state_code='10'),
            state_master_model(id=6, state_name='Chandigarh', state_code='04'),
            state_master_model(id=7, state_name='Chhattisgarh', state_code='22'),
            state_master_model(id=8, state_name='Dadra & Nagar Haveli', state_code='26'),
            state_master_model(id=9, state_name='Daman & Diu', state_code='25'),
            state_master_model(id=10, state_name='Delhi', state_code='07'),
            state_master_model(id=11, state_name='Goa', state_code='30'),
            state_master_model(id=12, state_name='Gujarat', state_code='24'),
            state_master_model(id=13, state_name='Haryana', state_code='06'),
            state_master_model(id=14, state_name='Himachal Pradesh', state_code='02'),
            state_master_model(id=15, state_name='Jammu & Kashmir', state_code='01'),
            state_master_model(id=16, state_name='Jharkhand', state_code='20'),
            state_master_model(id=17, state_name='Karnataka', state_code='29'),
            state_master_model(id=18, state_name='Kerala', state_code='32'),
            state_master_model(id=19, state_name='Lakshdweep', state_code='31'),
            state_master_model(id=20, state_name='Madhya Pradesh', state_code='23'),
            state_master_model(id=21, state_name='Maharashtra', state_code='27'),
            state_master_model(id=22, state_name='Manipur', state_code='14'),
            state_master_model(id=23, state_name='Meghalaya', state_code='17'),
            state_master_model(id=24, state_name='Mizoram', state_code='15'),
            state_master_model(id=25, state_name='Nagaland', state_code='13'),
            state_master_model(id=26, state_name='Odisha', state_code='21'),
            state_master_model(id=27, state_name='Other Territory', state_code='97'),
            state_master_model(id=28, state_name='Puducherry', state_code='34'),
            state_master_model(id=29, state_name='Punjab', state_code='03'),
            state_master_model(id=30, state_name='Rajasthan', state_code='08'),
            state_master_model(id=31, state_name='Sikkim', state_code='11'),
            state_master_model(id=32, state_name='Tamil Nadu', state_code='33'),
            state_master_model(id=33, state_name='Telangana', state_code='36'),
            state_master_model(id=34, state_name='Tripura', state_code='16'),
            state_master_model(id=35, state_name='Uttar Pradesh', state_code='09'),
            state_master_model(id=36, state_name='Uttarakhand', state_code='05'),
            state_master_model(id=37, state_name='West Bengal', state_code='19'),
        ]

        state_master_model.objects.bulk_create(state_objects)

    def delete_default_state_objects(apps, schema_editor):
        """
        This method will be called by migration to roll back data insertion
        """
        state_master_model = apps.get_model("bracketline", "StateMaster")
        state_master_model.objects.all().delete()

    def load_default_uqc_objects(apps, schema_editor):
        """
        This method will be called by migration to insert the data
        """
        uqc_model = apps.get_model("bracketline", "UQC")

        uqc_objects = [
            uqc_model(id=1, unit_code='BAG', unit_name='BAGS'),
            uqc_model(id=2, unit_code='BAL', unit_name='BALE'),
            uqc_model(id=3, unit_code='BDL', unit_name='BUNDLES'),
            uqc_model(id=4, unit_code='BKL', unit_name='BUCKLES'),
            uqc_model(id=5, unit_code='BOU', unit_name='BILLION OF UNITS'),
            uqc_model(id=6, unit_code='BOX', unit_name='BOX'),
            uqc_model(id=7, unit_code='BTL', unit_name='BOTTLES'),
            uqc_model(id=8, unit_code='BUN', unit_name='BUNCHES'),
            uqc_model(id=9, unit_code='CAN', unit_name='CANS'),
            uqc_model(id=10, unit_code='CBM', unit_name='CUBIC METERS'),
            uqc_model(id=11, unit_code='CCM', unit_name='CUBIC CENTIMETERS'),
            uqc_model(id=12, unit_code='CMS', unit_name='CENTIMETERS'),
            uqc_model(id=13, unit_code='CTN', unit_name='CARTONS'),
            uqc_model(id=14, unit_code='DOZ', unit_name='DOZENS'),
            uqc_model(id=15, unit_code='DRM', unit_name='DRUMS'),
            uqc_model(id=16, unit_code='GGK', unit_name='GREAT GROSS'),
            uqc_model(id=17, unit_code='GMS', unit_name='GRAMMES'),
            uqc_model(id=18, unit_code='GRS', unit_name='GROSS'),
            uqc_model(id=19, unit_code='GYD', unit_name='GROSS YARDS'),
            uqc_model(id=20, unit_code='KGS', unit_name='KILOGRAMS'),
            uqc_model(id=21, unit_code='KLR', unit_name='KILOLITRE'),
            uqc_model(id=22, unit_code='KME', unit_name='KILOMETRE'),
            uqc_model(id=23, unit_code='MLT', unit_name='MILILITRE'),
            uqc_model(id=24, unit_code='MTR', unit_name='METERS'),
            uqc_model(id=25, unit_code='MTS', unit_name='METRIC TON'),
            uqc_model(id=26, unit_code='NOS', unit_name='NUMBERS'),
            uqc_model(id=27, unit_code='PAC', unit_name='PACKS'),
            uqc_model(id=28, unit_code='PCS', unit_name='PIECES'),
            uqc_model(id=29, unit_code='PRS', unit_name='PAIRS'),
            uqc_model(id=30, unit_code='QTL', unit_name='QUINTAL'),
            uqc_model(id=31, unit_code='ROL', unit_name='ROLLS'),
            uqc_model(id=32, unit_code='SET', unit_name='SETS'),
            uqc_model(id=33, unit_code='SQF', unit_name='SQUARE FEET'),
            uqc_model(id=34, unit_code='SQM', unit_name='SQUARE METERS'),
            uqc_model(id=35, unit_code='SQY', unit_name='SQUARE YARDS'),
            uqc_model(id=36, unit_code='TBS', unit_name='TABLETS'),
            uqc_model(id=37, unit_code='TGM', unit_name='TEN GROSS'),
            uqc_model(id=38, unit_code='THD', unit_name='THOUSANDS'),
            uqc_model(id=39, unit_code='TON', unit_name='TONNES'),
            uqc_model(id=40, unit_code='TUB', unit_name='TUBES'),
            uqc_model(id=41, unit_code='UGS', unit_name='US GALLONS'),
            uqc_model(id=42, unit_code='UNT', unit_name='UNITS'),
            uqc_model(id=43, unit_code='YDS', unit_name='YARDS'),
            uqc_model(id=44, unit_code='OTH', unit_name='OTHERS'),
        ]

        uqc_model.objects.bulk_create(uqc_objects)

    def delete_default_uqc_objects(apps, schema_editor):
        """
        This method will be called by migration to roll back data insertion
        """
        uqc_model = apps.get_model("bracketline", "UQC")
        uqc_model.objects.all().delete()


    dependencies = [
        ('bracketline', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_default_group_base_objects, delete_default_group_base_objects),
        migrations.RunPython(load_default_country_objects, delete_default_country_objects),
        migrations.RunPython(load_default_state_objects, delete_default_state_objects),
        migrations.RunPython(load_default_uqc_objects, delete_default_uqc_objects),
    ]
