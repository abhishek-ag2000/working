# Generated by Django 2.0.6 on 2019-09-09 14:10

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bracketline', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(blank=True)),
                ('url_hash', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('modified_date', models.DateField(auto_now=True)),
                ('bussiness_nature', models.CharField(choices=[('Service Provider', 'Service Provider'), ('Retail', 'Retail'), ('Wholesale', 'Wholesale'), ('Works Contract', 'Works Contract'), ('Leasing', 'Leasing'), ('Factory Manufacturing', 'Factory Manufacturing'), ('Bonded Warehouse', 'Bonded Warehouse')], default='Retail', max_length=32)),
                ('maintain', models.CharField(choices=[('Accounts Only', 'Accounts Only'), ('Accounts with Inventory', 'Accounts with Inventory')], default='Accounts with Inventory', max_length=32)),
                ('type_of_company', models.CharField(choices=[('Individual', 'Individual'), ('HUF', 'HUF'), ('Partnership', 'Partnership'), ('Trust', 'Trust'), ('Private Company', 'Private Company'), ('Public Company', 'Public Company'), ('LLP', 'LLP')], default='Individual', max_length=32)),
                ('financial_year_from', models.CharField(choices=[('1st:April-31st:March', '1st:April-31st:March'), ('1st:Jan-31st:December', '1st:Jan-31st:December')], default='1st:April-31st:March', max_length=30)),
                ('books_begining_from', models.DateField(default=datetime.date.today)),
                ('gst', models.CharField(blank=True, max_length=20, null=True)),
                ('gst_enabled', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('gst_registration_type', models.CharField(choices=[('Regular', 'Regular'), ('Composition', 'Composition')], default='Regular', max_length=20)),
                ('pan_no', models.CharField(blank=True, max_length=18, null=True)),
                ('capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('asset', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('pl', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('is_other_territory', models.BooleanField(default=False)),
                ('way_bill', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('threshold_limit_inc', models.CharField(blank=True, choices=[('Invoice value', 'Invoice value'), ('Taxable and exemt goods value', 'Taxable and exemt goods value'), ('Taxable goods value', 'Taxable goods value')], default='Invoice value', max_length=50)),
                ('interstate_apl', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('threshold_limit', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('intrastate_apl', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('threshold_limit_intra', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('adv_receipt_tax', models.BooleanField(default=False)),
                ('tax_liability', models.BooleanField(default=False)),
                ('set_or_alter_gst', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=100)),
                ('hsn', models.CharField(blank=True, max_length=15)),
                ('taxability', models.CharField(choices=[('Unknown', 'Unknown'), ('Exempt', 'Exempt'), ('Nil Rated', 'Nil Rated'), ('Taxable', 'Taxable')], default='Unknown', max_length=20)),
                ('reverse_charge', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('input_credit', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('integrated_tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('central_tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('state_tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('cess', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('provide_lut', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('lut_bond_no', models.CharField(blank=True, max_length=50)),
                ('gst_applicable', models.DateField(default=datetime.date.today)),
                ('applicable_from', models.DateField(default=datetime.date.today)),
                ('applicable_to', models.DateField(default=datetime.date.today)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('purchase_tax', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('accountant', models.ManyToManyField(blank=True, related_name='main_accountant', to=settings.AUTH_USER_MODEL)),
                ('auditor', models.ManyToManyField(blank=True, related_name='main_auditor', to=settings.AUTH_USER_MODEL)),
                ('cb_personal', models.ManyToManyField(blank=True, related_name='main_cb', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.IntegerField(blank=True)),
                ('url_hash', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=50)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('modified_date', models.DateField(auto_now=True)),
                ('address', models.TextField(blank=True)),
                ('telephone_no', models.CharField(blank=True, max_length=32, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=32, null=True)),
                ('qr_code', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='qr_images')),
                ('is_qr', models.BooleanField(default=False)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organisation/logo')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='organisation/cover')),
                ('country', models.ForeignKey(default=12, on_delete=django.db.models.deletion.DO_NOTHING, related_name='company_country', to='bracketline.CountryMaster')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='company_state', to='bracketline.StateMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='static_page/portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title1', models.TextField(blank=True, null=True)),
                ('title2', models.TextField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('service_desc', models.TextField(blank=True, null=True)),
                ('portfolio_desc', models.TextField(blank=True, null=True)),
                ('team_desc', models.TextField(blank=True, null=True)),
                ('head_bg', models.ImageField(blank=True, null=True, upload_to='static_page/head_img')),
                ('organisation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_static_page', to='company.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='static_page/team')),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('staticpage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='static_page_teammember', to='company.StaticPage')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='staticpage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='static_page_service', to='company.StaticPage'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='staticpage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='static_page_portfolio', to='company.StaticPage'),
        ),
        migrations.AddField(
            model_name='company',
            name='organisation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_organisation', to='company.Organisation'),
        ),
        migrations.AddField(
            model_name='company',
            name='purchase_personel',
            field=models.ManyToManyField(blank=True, related_name='main_purchase', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='sale_personel',
            field=models.ManyToManyField(blank=True, related_name='main_sales', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_owner', to=settings.AUTH_USER_MODEL),
        ),
    ]
